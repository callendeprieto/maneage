#!.local/bin/bash
#
# The example hook script to store the metadata information of version
# controlled files (with each commit) using the `metastore' program.
#
# This script is taken from the `examples/hooks/pre-commit' file of the
# `metastore' package (installed within the pipeline, with an MIT
# license). We have just changed the name of the `MSFILE' and also set
# special characters for the installation location of meta-store so our own
# installation is found by Git.
#
# WARNING:
#
# If the commit is aborted (e.g. by not entering any synopsis),
# then updated metastore file (.metadata by default) is not reverted,
# so its new version remains in the index.
# To undo any changes in metastore file written since HEAD commit,
# you may want to reset and checkout HEAD version of the file:
#
#     git reset HEAD -- .metadata
#     git checkout HEAD -- .metadata

MSFILE=".file-metadata"

exit_on_fail() {
	"$@"
	if [ $? -ne 0 ]; then
		echo "Failed to execute: $@" >&2
		exit 1
	fi
}

exit_on_fail \
	@BINDIR@/metastore -s -f "$MSFILE"

# If it's first metastore commit, store again to include $MSFILE in $MSFILE.
if ! git-ls-tree --name-only HEAD 2>/dev/null | grep -Fqx "$MSFILE"; then
	exit_on_fail \
		@BINDIR@/metastore -s -f "$MSFILE"
fi

if [ ! -e "$MSFILE" ]; then
	echo "\"$MSFILE\" missing" >&2
	exit 1
fi

exit_on_fail \
	git-add "$MSFILE"

exit 0
